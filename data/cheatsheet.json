{
	"git": [
			{
				"create": 
				[{
					"command" : "git init",
					"description": "Create a new local repository",
					"tag": ["create"]
				},
				{
					"command" : "git clone http://yourUrl.com/repo.git",
					"description": "Clone an existing repository",
					"tag": ["create", "clone"]
				}]
			},
			{
				"local changes": 
				[{
					"command" : "git status",
					"description": "Lists changed files in your working directory",
					"tag": ["local changes"]
				},
				{
					"command" : "git add .",
					"description": "Add all changes to next commit",
					"tag": ["local changes"]
				},
				{
					"command" : "git commit -a -m \"I'm adding this message\"",
					"description": "Add all changes to next commit",
					"tag": ["local changes"]
				},
				{
					"command" : "\"press i to start entering text and save by pressing esc and :wq and enter\"",
					"description": "How to exit VIM if you commit without -m tag",
					"tag": ["local changes"]
				}]
			},
			{
				"history": 
				[{
					"command" : "git log",
					"description": "Show all commits, newest first.",
					"tag": ["log"]
				},
				{
					"command" : "git log -p myfile",
					"description": "Show changes over time for myfile",
					"tag": ["log"]
				},
				{
					"command" : "git blame myfile",
					"description": "See who changed what/when in myfile",
					"tag": ["blame"]
				}]
			},
			{
				"branches": 
				[{
					"command" : "git branch -av",
					"description": "List all existing branches.",
					"tag": ["branch"]
				},
				{
					"command" : "git checkout mybranch",
					"description": "Switch to mybranch",
					"tag": ["branch"]
				},
				{
					"command" : "git branch mybranch",
					"description": "Create a new branch called mybranch",
					"tag": ["branch"]
				},
				{
					"command" : "git checkout --track http://yourUrl.com/repo.git",
					"description": "Create a new tracking branch based on a remote branch.",
					"tag": ["branch"]
				},
				{
					"command" : "git branch -d mybranch",
					"description": "delete local branch called mybranch",
					"tag": ["branch"]
				}]
			}							
			],
	"gulp": [
			{
				"Setup": 
				[{
					"command" : "npm install --global gulp-cli",
					"description": "Install gulp globally.",
					"tag": ["install", "global"]
				},
				{
					"command" : "npm install --save-dev gulp",
					"description": "Install gulp in your project devDependencies.",
					"tag": ["install" , "local"]		
				}]
			},
			{
				"API": 
				[{
					"command" : "gulp.task('somename', function() { // Do stuff });",
					"description": "Define a task.",
					"tag": ["task"]	
				},
				{
					"command" : "gulp.task('mytask', ['array', 'of', 'task', 'names'], function() { // Do stuff });",
					"description": "Define a task. with an array of tasks to be executed and completed before your task will run.",
					"tag": ["task"]
				},
				{
					"command" : "gulp.watch('path/to/**/*.scss', ['name of task to run'])",
					"description": "Watch files and do something when a file changes.",
					"tag": ["watch"]
				}			
				]
			}
			],
		"terminal": [
			{
				"Core Commands": 
				[{
					"command" : "cd ~",
					"description": "Change to user home directory",
					"tag": ["change", "home"]	
				},
				{
					"command" : "cd ..;",
					"description": "Change directory to the current directory's parent directory",
					"tag": ["change", "up", "parent"]
				},
				{
					"command" : "ls -a",
					"description": "List all files including hidden.",
					"tag": ["list", "hidden"]
				},
				{
					"command" : "open [myfile]",
					"description": "Open file named myfile",
					"tag": ["open", "file"]
				},				
				{
					"command" : "clear",
					"description": "Clear terminal screen.",
					"tag": ["clear"]
				}						
				]
			},		
			{
				"File Management": 
				[{
					"command" : "touch [myfile];",
					"description": "Create a new file [myfile].",
					"tag": ["touch", "create"]
				},
				{
					"command" : "pwd",
					"description": "Display path to working directory",
					"tag": ["path" , "directory"]		
				},
				{
					"command" : "mkdir [mydir]",
					"description": "make directory [mydir]",
					"tag": ["make" , "create"]		
				},				
				{
					"command" : "rm [myfile]",
					"description": "remove file [myfile]",
					"tag": ["remove" , "delete"]		
				},
				{
					"command" : "rm -r [mydir]",
					"description": "remove directory [mydir]",
					"tag": ["remove" , "delete"]		
				}]
			}
			],
"bourbon": [
			{
				"Animations and Transitions": 
				[{
					"command" : "@include animation(scale 1.0s ease-in, slide 2.0s ease);",
					"description": "Animation mixin supports comma separated lists of values, which allows different transitions for individual properties to be described in a single style rule.",
					"tag": ["animation"]
				},
				{
					"command" : "@include transition(opacity 1.0s ease-in 0s, width 2.0s ease-in 2s);",
					"description": "Transition provides a shorthand syntax and supports multiple transitions.",
					"tag": ["transition"]		
				}]
			},
			{
				"Styling": 
				[{
					"command" : "@include size(10em auto);",
					"description": "Set width and height in a single statement. Accepts all units.",
					"tag": ["size"]	
				},
				{
					"command" : "@include position(relative, 0 null null 10em);",
					"description": "A shorthand notation for positioning elements.",
					"tag": ["position"]
				}
				]
			}
			]


}




